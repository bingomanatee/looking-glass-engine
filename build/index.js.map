{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 811e35d2ab15b88e545d","webpack:///external \"rxjs\"","webpack:///./src/constants.js","webpack:///./src/nameRegex.js","webpack:///./src/util.js","webpack:///./src/Store/Store.js","webpack:///./src/Store/index.js","webpack:///./src/ChangePromise/ChangePromise.js","webpack:///./src/ChangePromise/index.js","webpack:///./src/StoreMap/StoreMap.js","webpack:///./src/StoreMap/index.js","webpack:///./src/index.js","webpack:///./src/bottle.js","webpack:///external \"bottlejs\""],"names":["bottle","Symbol","out","error","first","result","err","fn","done","fail","promise","Object","change","delta","item","value","map","console","defaultValue","nameRegex","subject","Promise","call","state","killSwitch","from","errorMessage","delayTime","delay","race","isObject","constructor","source","config","asValue","status","_mergePropsStateIntoState","isSet","realState","errors","validator","propTest","valid","addActions","actions","actionsMap","mutator","message","mutators","addAction","Array","makeAction","action","update","setTimeout","_delay","sub","_resolve","isFunction","newState","isPromise","_updateState","afterStart","afterStop","afterInitError","after","what","restart","start","starter","stop","_log","clone","_cloneError","addProp","def","valueIfTestFails","setter","capFirst","string","storeFactory","nextId","lGet","resolve","unravelled","reject","then","catch","changePromiseFactory","storeMapInstance","byName","store","customActions","asMap","promises","Store","storeMap","stateReducer","actionReducer","trueMapStoreMap","_listenToStores","_updateStoreFromStores","storeMapFactory","Bottle","factory","container","Engine","EngineMerger","mergeIntoState","STORE_STATE_UNSET_VALUE","S_NEW","S_STARTED","S_STARTING","S_ERROR","ACTION_ERROR","ACTION_START","ACTION_NOOP","ACTION_COMPLETE","NOT_SET"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"freactal3\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freactal3\"] = factory();\n\telse\n\t\troot[\"freactal3\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 811e35d2ab15b88e545d","module.exports = require(\"rxjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs\"\n// module id = 0\n// module chunks = 0","\n\nexport default (bottle) => {\n  bottle.constant('STORE_STATE_UNSET_VALUE', Symbol('STORE_STATE_UNSET_VALUE'));\n  bottle.constant('S_NEW', Symbol('S_NEW'));\n  bottle.constant('S_STARTED', Symbol('S_STARTED'));\n  bottle.constant('S_STOPPED', Symbol('S_STOPPED'));\n  bottle.constant('S_STARTING', Symbol('S_STARTING'));\n  bottle.constant('S_ERROR', Symbol('S_ERROR'));\n  bottle.constant('ACTION_ERROR', Symbol('ACTION_ERROR'));\n  bottle.constant('ACTION_START', Symbol('ACTION_START'));\n  bottle.constant('ACTION_WORKING', Symbol('ACTION_WORKING'));\n  bottle.constant('ACTION_NOOP', Symbol('ACTION_NOOP'));\n  bottle.constant('ACTION_COMPLETE', Symbol('ACTION_COMPLETE'));\n  bottle.constant('NOT_SET', Symbol('NOT_SET'));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","/* eslint-disable no-useless-escape,max-len */\nexport default /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|await|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*$/;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nameRegex.js","import { from, race } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport nameRegex from './nameRegex';\n\nexport default (bottle) => {\n  /**\n   * decomposes a promise into result and error;\n   * returns these in an array which also has properties of result and error,\n   * so\n   *\n   * const [result, error] = p(promiseFn())\n   *\n   * is valid as is\n   *\n   * const {result, error} = p(promiseFn());\n   *\n   * accepts a promise, or a function that is called with the remaining arguments.\n   */\n  bottle.factory('p', () => async (first, ...args) => {\n    let error = null;\n    let result;\n    try {\n      if (typeof first === 'function') {\n        result = await first(...args);\n      } else {\n        result = await (first);\n      }\n    } catch (err) {\n      error = err;\n    }\n    const out = [result, error];\n    out.result = result;\n    out.error = error;\n    return out;\n  });\n\n  bottle.factory('call', () => (fn, ...args) => {\n    if (fn && typeof fn === 'function') {\n      return fn(args);\n    }\n    return null;\n  });\n\n  bottle.factory('explodePromise', ({ NOT_SET, isPromise }) => (promise) => {\n    let done = NOT_SET;\n    let fail = NOT_SET;\n\n    if (isPromise(promise)) {\n      done = (...args) => [...args];\n      fail = (...args) => [...args];\n      promise.then(done).catch(fail);\n    } else promise = new Promise((d, f) => { done = d; fail = f; });\n\n    return Object.assign([promise, done, fail], { done, fail, promise });\n  });\n\n  bottle.factory('update', () => function (delta) {\n    return (actions, ...args) => (state) => {\n      const change = delta(actions, ...args)(state);\n      return Object.assign({}, state, change);\n    };\n  });\n\n  bottle.factory('obj', () => (key, value) => {\n    const out = {};\n    out[key] = value;\n    return out;\n  });\n\n  /**\n   * converts a POJO into an official JavaScript map.\n   */\n  bottle.factory('asMap', () => (item) => {\n    if (!item) return new Map();\n    if (item instanceof Map) return item;\n    if (typeof item === 'object') {\n      return Object.keys(item).reduce((map, key) => {\n        const value = item[key];\n        map.set(key, value);\n        return map;\n      }, new Map());\n    }\n    console.log('asMap cannot process ', item);\n    return new Map();\n  });\n\n  bottle.factory('asValue', ({ NOT_SET }) => (value, defaultValue = null) => {\n    if ((!value) || (value === NOT_SET)) return defaultValue;\n    return value;\n  });\n\n  bottle.constant('NOOP', a => a);\n\n  /**\n   * This detects some specific falsines conditions.\n   */\n  bottle.factory('isSet', ({ NOT_SET }) => (value) => {\n    if (value === NOT_SET) return false;\n    if (typeof value === 'undefined') return false;\n    if (value === null) return false;\n    return true;\n  });\n\n  bottle.factory('isObject', ({ isSet }) => (value) => {\n    if (!isSet(value)) return false;\n    return typeof value === 'object';\n  });\n\n  bottle.factory('isFnName', () => (str) => {\n    if (!str) return false;\n    if (!(typeof str === 'string')) return false;\n    return nameRegex.test(str);\n  });\n\n  bottle.factory('isFunction', () => item => typeof item === 'function');\n\n  bottle.factory('isPromise', () => (subject) => {\n    if (!subject) return false;\n    if (subject instanceof Promise) return true;\n    return Promise.resolve(subject) === subject;\n  });\n\n  bottle.factory('functionCombine', ({ call }) => (f1, f2) => async (...args) => {\n    await call(f1, ...args);\n    return call(f2, ...args);\n  });\n\n  bottle.factory('mergeIntoState', () => change => state => Object.assign({}, state, change));\n\n  bottle.factory('timeLimitObservable', () => (observable, delayTime = 1000, errorMessage) => {\n    const killSwitch = from([false, new Error(errorMessage || `took over ${delayTime / 1000} secs`)])\n      .pipe(delay(delayTime));\n\n    return race(observable, killSwitch);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","/* eslint-disable no-unreachable */\n\nimport clone from 'lodash.clonedeep';\n\nimport { BehaviorSubject } from 'rxjs';\n\nexport default (bottle) => {\n  bottle.factory('Store', ({\n    STORE_STATE_UNSET_VALUE,\n    S_NEW,\n    S_STARTING,\n    S_ERROR,\n    S_STOPPED,\n    S_STARTED,\n    NOT_SET,\n    ChangePromise,\n    isPromise,\n    capFirst,\n    asValue,\n    isSet,\n    isFnName,\n    isFunction,\n    isObject,\n  }) => {\n    /**\n     * a Store is a record of a state that updates over time.\n     *\n     * It has a defined status indicating where in the initialization cycle it is:\n     *\n     * NEW > STARTING > STARTED\n     *\n     * note that stores without a starer function begin at STARTED (as start() is a no-op without\n     * a starter function.\n     *\n     * and in some cases in a terminal \"frozen\" state\n     *\n     * > STOPPED | ERROR\n     *\n     * Stores can be stopped, by calling\n     *\n     *   store.stop()\n     *\n     * Stores can also be restarted to back out of a terminal state (> STARTED) by calling\n     *\n     *   store.restart(state?);\n     *\n     * Store updates and do are designed to handle a \"mixed\n     */\n\n    class Store {\n      constructor(config = {}) {\n        let {\n          state = STORE_STATE_UNSET_VALUE,\n        } = config;\n\n        const {\n          starter = NOT_SET,\n          propTypes = {},\n          debug = false, actions = {},\n        } = config;\n\n        this._propTypes = propTypes;\n        this._propsState = {};\n        this._props = {};\n\n        if (state === STORE_STATE_UNSET_VALUE && starter === NOT_SET) state = {};\n\n        this.errorStream = new BehaviorSubject(false);\n\n        if (debug) {\n          this.debugStream = new BehaviorSubject({\n            source: 'constructor',\n            config,\n          });\n        }\n\n        this.addActions(actions);\n\n        this._state = state;\n        this._starter = asValue(starter);\n        this._status = asValue(this._starter) ? S_NEW : S_STARTED;\n\n        this.stream = new BehaviorSubject({\n          state: this.state,\n          status: this.status,\n        });\n      }\n\n      /* ----------------- PROPERTIES --------------------- */\n\n      get actions() {\n        if (!this._actions) this._actions = {};\n        return this._actions;\n      }\n\n      get do() {\n        return this._actions;\n      }\n\n      get status() {\n        return this._status;\n      }\n\n      /**\n       * This is a wierd thing -- acknowledged but ---\n       * status can only be set privately, but in doing so,\n       * we still want to ensure it is being set to one of a small\n       * set of values. so the private variable for _status is itself\n       * a property.\n       *\n       * @returns {Symbol}\n       * @private\n       */\n      get _status() {\n        return this.__status;\n      }\n\n      set _status(value) {\n        if (![S_STARTED, S_STARTING, S_ERROR, S_NEW, S_STOPPED].includes(value)) {\n          console.log('attempt to set status to ', value);\n          throw new Error('bad value set for _status');\n        }\n        this.__status = value;\n      }\n\n      /**\n       * As with status, _starter is a local variable, but we still\n       * want to control its input so _status is also a property with\n       * input validation.\n       *\n       * @returns {*|null}\n       * @private\n       */\n      get _starter() {\n        return this.__starter || null;\n      }\n\n      set _starter(value) {\n        if (!isSet(value)) {\n          this.__starter = null;\n          return;\n        }\n        if (!isFunction(value)) {\n          console.log('attempt to set bad value to starter:', value);\n          this.__starter = null;\n          return;\n        }\n        this.__starter = value;\n      }\n\n      /**\n       * if both _state and _propsState are objects,\n       * merges _propsState into _state and empties _propsState.\n       * @private\n       */\n      _mergePropsStateIntoState() {\n        if (isSet(this._state) && isObject(this._state)) {\n          if (this._propsState && (this._state) && (typeof this._state === 'object')) {\n            this._state = { ...this._state, ...this._propsState };\n            this._propsState = false;\n          }\n        }\n      }\n\n      /**\n       * NOTE ON STATE TYPE\n       *\n       * while this code doesn't explicitly force the type Object on state it also doesn't go\n       * out of its way to insulate against non-object states. If you put non-objects into state,\n       * happy debugging!\n       *\n       * It is better/safer in practice to put a single key object ({ value: myThing}) into state.\n       *\n       * Because there is something of a race condition between the starter completing\n       * and the state being returned, we do a quick merge between them immediately before\n       * returning state if _propsState exists and we are in S_STARTED status.\n       *\n       * yes: this is a \"hack\".\n       *\n       * @returns {variant}\n       */\n      get state() {\n        if (this._propsState && this.status === S_STARTED) {\n          this._mergePropsStateIntoState();\n        }\n        return this._state;\n      }\n\n      get validState() {\n        return this.validator(this.state)[0];\n      }\n\n      get stateErrors() {\n        return this.validator(this.state)[1];\n      }\n\n      get stateAndErrors() {\n        const [state, errors] = this.validator(this.state);\n        return {\n          state,\n          realState: this.state,\n          errors,\n        };\n      }\n\n      validator(state) {\n        if (state === NOT_SET || (typeof state !== 'object')) return [state];\n\n        let valid = true;\n        const errors = {};\n\n\n        Object.keys(this._props).forEach((name) => {\n          const { type, test: propTest, valueIfTestFails = NOT_SET } = this._props[name];\n          /**\n           * note - currently type is a \"toothless\" field to indicate the type of value\n           * a property should have - no code exists for validation.\n           */\n          if (name in state) {\n            const error = propTest(state[name]);\n            if (error) {\n              valid = false;\n              errors[name] = error;\n              if (valueIfTestFails !== NOT_SET) state[name] = valueIfTestFails;\n            }\n          }\n        });\n\n        return [state, (!valid) && errors];\n      }\n\n      /* ----------------- METHODS ------------------------ */\n\n      /**\n       * an action is a function that takes optional arguments\n       * and prepends the store snapshot in front of it. i.e.,\n       *\n       * myStore = new Store({\n       *   state: {a: 4},}\n       *   do: {\n       *     addA:({state}, a) => ({...state, a: state.a + a})\n       *   }\n       * }\n       *\n       * myStore.do.addA(3);\n       * // myStore.state.a === 7;\n       *\n       * The signature - what parts of state are pulled into the action signature are arguable.\n       * Freactal, for instance separates the provision of state from the provision of do.\n       * So an action function can return ....\n       *\n       *  - an object (the next state), OR\n       *  - a function that takes ({do, state}) and returns .... ^ ^ OR\n       *  - a Promise that returns ^ ^\n       *\n       *  updates keep \"unwrapping\" functions and promises\n       *  til a non-function, non-promise is returned.\n       *  note, if a function returns undefined (i.e., has no return statement), it is a \"No - op\";\n       *  it will not change state _DIRECTLY_\n       *  but it might do so indirectly by calling other do.\n       */\n\n      /**\n       *\n       * @param actionsMap {Object} a hash of name/function | value parameters.\n       */\n\n      addActions(actionsMap = {}) {\n        const actions = this._actions || {};\n\n        if (actionsMap && typeof actionsMap === 'object') {\n          Object.keys(actionsMap).forEach((name) => {\n            const mutator = actionsMap[name];\n            actions[name] = this.makeAction(name, mutator);\n          });\n        } else {\n          this.errorStream.next({\n            source: 'addActions',\n            message: 'bad actionsMap',\n            mutators: actionsMap,\n          });\n        }\n\n        this._actions = actions;\n      }\n\n      /**\n       * because addActions operates on name-value pairs if you want\n       * to specify info metadata, you must do so by passing an array\n       * with [mutator, info] in it.\n       *\n       * @param name {string}\n       * @param method {function | [function, object]}\n       * @param info {object} optional\n       * @returns {*}\n       */\n      addAction(name, method, info = {}) {\n        if (Array.isArray(method)) {\n          return this.addAction(name, ...method);\n        }\n        if (!this._actions) this._actions = {};\n        this._actions[name] = this.makeAction(name, method, info);\n        return this;\n      }\n\n      /** *\n       * returns a function that changes state.\n       * @param name {string}\n       * @param mutator {function}\n       * @param info {Object}\n       * @returns {function(...[*]): ChangePromise}\n       */\n      makeAction(name, mutator, info = {}) {\n        if (!isFunction(mutator)) {\n          mutator = () => mutator;\n        }\n        return (...args) => this.update(() => mutator(this, ...args), { ...info, action: name || true });\n      }\n\n      /**\n       * takes (or creates) a ChangePromise (which it returns)\n       * and attempts to trigger a state change.\n       *\n       * NOTE: although a promise is returned, change is SYNCHRONOUS unless:\n       *\n       * a) the store is not initialized AND the change doesn't change status,\n       *    in which case it is delayed;\n       * b) the change is itself a promise, in which case change occurs when it is resolved.\n       *\n       * @param change {variant}\n       * @param info {Object} -- metadata; includes potentally a status change.\n       * @returns {ChangePromise}\n       */\n      update(change, info = NOT_SET) {\n        if (!(change instanceof ChangePromise)) {\n          change = new ChangePromise(change, isObject(info) ? info : {});\n          this._log({ source: 'update', message: 'created ChangePromise', change });\n        } else {\n          this._log({ source: 'update', message: 'received change', change });\n        }\n\n        if (change.status) {\n          // changes that include status change ALWAYS get resolved IMMEDIATELY.\n          this._resolve(change);\n        } else {\n          // changes that don't include status change get queued behind the starter,\n          // unless state is already started.\n          // No change gets processed if store is in a terminal state.\n          switch (this.status) {\n            case NOT_SET:\n              this.after('NotSet', 'status is not set');\n              this._delay(change);\n              break;\n\n            case S_STARTING:\n              this._delay(change);\n              break;\n\n            case S_STARTED:\n              this._resolve(change);\n              break;\n\n            case S_ERROR:\n              this.afterInitError({\n                source: 'update',\n                message: 'change requested of store after init error',\n                change,\n              });\n              setTimeout(() => change.reject(new Error('change requested of errored store')));\n              break;\n\n            case S_STOPPED:\n              this.afterStop({\n                source: 'update',\n                message: 'change requested to stopped store',\n                change,\n              });\n              setTimeout(() => change.reject(new Error('change requested of stopped store')));\n              break;\n\n            default:\n              console.log('unknown status:', this.status);\n              change.reject(new Error(`change cannot resolve - state in unknown status ${this.status.toString()}`));\n          }\n        }\n\n        return change;\n      }\n\n      _delay(change) {\n        this._log({\n          source: '_delay',\n          change,\n        });\n        const sub = this.stream.subscribe(() => {\n          switch (this.status) {\n            case S_STARTED:\n              sub.unsubscribe();\n              this.update(change);\n              break;\n\n            case S_ERROR:\n              sub.unsubscribe();\n              change.reject(this.initializationError\n                || new Error('initialization error before change resolved'));\n              break;\n\n            case S_STOPPED:\n              sub.unsubscribe();\n              change.reject(this.initializationError\n                || new Error('store stopped before change resolved'));\n              break;\n\n            default:\n            // noop;\n          }\n        });\n        return change;\n      }\n\n      /**\n       * _resolve should only be hit during/after initialization is complete.\n       * Due to promise delays, we still need to check post-init conditions.\n       *\n       * @param change {ChangePromise}\n       * @returns {ChangePromise} (the input)\n       */\n      _resolve(change) {\n        this._log({ source: '_resolve', change });\n        switch (this.status) {\n          case S_ERROR:\n            // stop\n            change.reject(this.initializationError\n              || new Error('initialization error before change resolved'));\n            return change;\n            break;\n\n          case S_STOPPED:\n            change.reject(this.initializationError\n              || new Error('store stopped before change resolved'));\n            break;\n\n          default:\n          // continue;\n        }\n\n        if (isFunction(change.value)) {\n          let newState;\n          try {\n            newState = change.value(this);\n          } catch (error) {\n            this._log({\n              source: '_resolve',\n              message: 'error from change function',\n              error,\n            });\n\n            change.reject(error);\n            if (change.status === S_STARTED) {\n              // from the start action\n              this._status = S_ERROR;\n            }\n            this.errorStream.next({ error, change });\n            return change;\n          }\n          this._log({\n            source: '_resolve',\n            message: 'changing state value to function result:',\n            newState,\n            change,\n          });\n          change.value = newState;\n          return this._resolve(change);\n        }\n\n        if (isPromise(change.value)) {\n          change.value\n            .then((unwrapped) => {\n              change.value = unwrapped;\n              this._resolve(change);\n            })\n            .catch((err) => {\n              change.reject(err);\n            });\n          return change;\n        }\n\n        // -- end of the road!\n        if (isSet(change.status)) {\n          this._log({ source: '_resolve', message: 'updating status', change });\n          this._status = change.status;\n        }\n\n        if (!change.noop) this._updateState(change.value);\n        this._log({ source: '_resolve', message: 'stream updated', change });\n        change.resolve(change.value);\n        this._log({ source: '_resolve', message: 'change resolved', change });\n        return change;\n      }\n\n      _updateState(value) {\n        if (isSet(value)) {\n          this._state = value;\n        }\n        this.stream.next({\n          status: this.status,\n          state: this.state,\n        });\n      }\n\n      afterStart(info) {\n        return this.after('Start', info);\n      }\n\n      afterStop(info) {\n        return this.after('Stop', info);\n      }\n\n      afterInitError(info) {\n        return this.after('InitError', info);\n      }\n\n      after(what, error = 'tried to change') {\n        if (typeof error === 'string') {\n          return this.after(what, new Error(error));\n        }\n        if (!what) what = this._status.toString();\n        this.errorStream.next({ source: `after${what}`, error: error });\n        return error;\n      }\n\n      /**\n       * this method is designed mainly to \"back out\" of an errored state.\n       * @param value\n       */\n\n      restart(value = NOT_SET) {\n        let out;\n        switch (this.status) {\n          // note: for non-error transient states, the value input is ignored..\n          case S_NEW:\n            out = this.start();\n            break;\n\n          case S_STARTING:\n            out = this._startPromise;\n            break;\n\n          case S_STARTED:\n            out = this._startPromise || Promise.resolve(this.state);\n            break;\n\n            /* ----------- THESE ARE THE CONDITIONS THIS METHOD IS MEANT TO ADDRESS ---------- */\n\n          case S_ERROR:\n            out = this.update(value, { status: S_STARTED });\n            break;\n\n          case S_STOPPED:\n            out = this.update(value, { status: S_STARTED });\n            break;\n\n          case NOT_SET:\n            out = this.update(value, { status: S_STARTED });\n            break;\n\n          default:\n            out = this.update(value, { status: S_STARTED });\n        }\n\n        this._startPromise = out;\n        return out;\n      }\n\n      /**\n       * activate whatever starter methods (if any) exist.\n       * note the promise returns the state UPON INTIALIZATION but that value shouldn't be taken\n       * as canon as it might not be up to date.\n       *\n       * @returns {*}\n       */\n      start() {\n        this._log({ source: 'start' });\n\n        if (!this._startPromise) {\n          switch (this.status) {\n            case S_NEW:\n\n              if (!isSet(this._starter)) {\n                // absent starter -- not an error.\n                this._log({ source: 'start', message: 'no starter - updating status' });\n                this._startPromise = this.update(NOT_SET, { status: S_STARTED });\n              } else if (!isFunction(this._starter)) {\n                // starter DOES EXIST but it is not a function - error.\n                this._status = S_ERROR;\n                const error = new Error('bad starter');\n                this.errorStream.next({ error, starter: this._starter });\n                return Promise.reject(error);\n              } else {\n                // status change;\n                this.update(NOT_SET, { status: S_STARTING });\n                this._startPromise = this.update(this._starter, { status: S_STARTED });\n              }\n\n              break;\n\n              /* ------------ THESE SHOULD NEVER BE HIT ----------- */\n\n            case S_STARTING:\n              // REALLY should never happen - startPromise should be set now\n              return Promise.reject(this.afterStart('tried to initialize after starting'));\n              break;\n\n            case S_STARTED:\n              this._startPromise = Promise.resolve(this.state);\n              break;\n\n            case S_ERROR:\n              return Promise.reject(this.afterInitError('tried to initialize after error'));\n              break;\n\n            case S_STOPPED:\n              return Promise.reject(this.afterStop('tried to initialize after stopped'));\n              break;\n\n            default:\n              return Promise.reject(new Error(`strange status: ${this.status.toString()}`));\n          }\n        }\n\n        return this._startPromise;\n      }\n\n      /**\n       *\n       * suspends future changes. Optionally accepts one final state change.\n       *\n       * @param value {variant} optional. if present, sets the state to a final value.\n       *\n       * @returns {ChangePromise | Promise}\n       */\n      stop(value = NOT_SET) {\n        return this.update(value, { status: S_STOPPED });\n      }\n\n      _log(info) {\n        if (this.debugStream) {\n          try {\n            this.debugStream.next({\n              ...info,\n              status: this.status,\n              state: clone(this.state),\n            });\n          } catch (err) {\n            this.debugStream.next({\n              info,\n              status: this.status,\n              state: this.state,\n              _cloneError: err,\n            });\n          }\n        }\n      }\n\n      /** ------------------ PROPERTY BASED DEFINITION --------------------- */\n\n      /**\n       * as an alternative to configuration based state definition you can define\n       * property based values for the store. This lets you set the default value\n       * and setter do for values in your store in a single step.\n       */\n\n      addProp(name, definition = {}) {\n        if (typeof name === 'object') {\n          Object.keys(name).forEach((key) => {\n            const def = name[key];\n            this.addProp(key, def);\n          });\n          return this;\n        }\n\n        const {\n          type = '*', start = null, test = () => false, valueIfTestFails = null,\n        } = definition;\n\n        let { setter = NOT_SET } = definition;\n\n        this._props[name] = {\n          type, test, valueIfTestFails,\n        };\n\n        /**\n         * if we are in STARTED status, patch the property start value into the state stream.\n         * Otherwise buffer the start values into _propsState, a \"future state buffer\"\n         * designed to support the condition where there is no defined state start\n         * (before starter completes).\n         */\n        switch (this.status) {\n          case S_STARTED:\n            this.update(({ state }) => ({ ...state, [name]: start }), {});\n            break;\n\n          default:\n            if (!this._propsState) this._propsState = {};\n            this._propsState[name] = start;\n        }\n\n        if (!isFnName(setter)) {\n          setter = `set${capFirst(name)}`;\n        }\n\n        if (!this._actions[setter]) {\n          this.addAction(setter, ({ state }, value) => {\n            const out = { ...state };\n            out[name] = value;\n            return out;\n          });\n        }\n        return this;\n      }\n    }\n\n    return Store;\n  });\n\n  bottle.constant('capFirst', string => string[0].toUpperCase() + string.slice(1));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Store/Store.js","import storeFactory from './Store';\n\nexport default (bottle) => {\n  storeFactory(bottle);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Store/index.js","import lGet from 'lodash.get';\n\nexport default (bottle) => {\n  bottle.factory('ChangePromise', ({ isPromise, isSet, NOT_SET }) => {\n    /**\n     * note a change promise is both a token that gets seeded through the change cycle of stores\n     * and a \"Promise\" -- it has the signature of a promise and behaves like one.\n     *\n     * When it's been fulfilled, calling _resolve will conclude the ChangePromise instance.\n     * On an error, calling reject will abort the ChangePromise instance.\n     */\n\n    let nextId = 0;\n\n    class ChangePromise {\n      constructor(change = NOT_SET, info = {}) {\n        if (typeof change === 'undefined') change = NOT_SET;\n        nextId += 1;\n        this.id = nextId;\n        const executor = (done, fail) => {\n          this._done = done;\n          this._fail = fail;\n        };\n        this._resolved = false;\n\n        this.promise = new Promise(executor);\n        // note - the ORIGINAL change request (function, promise, etc.) is kept as change.\n        // at it is unravelled the current value is kept in value;\n\n        this.change = change;\n        this.value = change;\n\n        this.info = info === NOT_SET ? {} : info;\n      }\n\n      get resolved() {\n        return this._resolved;\n      }\n\n      get noop() {\n        return lGet(this, 'info.noop', false);\n      }\n\n      get status() {\n        return lGet(this, 'info.status', NOT_SET);\n      }\n\n      /**\n       * _resolve (optionally) sets the final value of the change\n       * and closes the promise. It can only execute once.\n       *\n       * If value is (or is set to) a value then the change\n       * resolves that value and takes the result as the change's value\n       * then returns it.\n       *\n       * @param value {variant} optional\n       * @returns {Promise}\n       */\n      resolve(value = NOT_SET) {\n        if (this.resolved) {\n          return this.promise;\n        }\n        if (value !== NOT_SET) {\n          this.value = value;\n        }\n\n        if (isPromise(this.value)) {\n          return this.value.then(unravelled => this.resolve(unravelled));\n        }\n\n        this._resolved = true;\n        this._done(this.value);\n        return this.promise;\n      }\n\n      reject(value = NOT_SET) {\n        if (this.resolved) {\n          console.log('ChangePromise reject called with ', value, 'after _resolve');\n          return this.promise;\n        }\n\n        this._resolved = true;\n        if (value !== NOT_SET) this.error = value;\n        try {\n          this._fail(this.error);\n        } catch (err) {\n          console.log('error:', err);\n        }\n        return this.promise;\n      }\n\n      then(...args) {\n        return this.promise.then(...args);\n      }\n\n      catch(listener) {\n        return this.promise.catch(listener);\n      }\n    }\n\n    return ChangePromise;\n  });\n\n  bottle.factory('change', ({ ChangePromise }) => (newValue, params = {}) => new ChangePromise(newValue, params));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ChangePromise/ChangePromise.js","import changePromiseFactory from './ChangePromise';\n\nexport default (bottle) => {\n  changePromiseFactory(bottle);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ChangePromise/index.js","/* eslint-disable no-unreachable */\n\nimport clone from 'lodash.clonedeep';\nimport lGet from 'lodash.get';\n\nimport { BehaviorSubject } from 'rxjs';\n\nexport default (bottle) => {\n  /**\n   * Returns an object with states sub-indexed by the store name keys in the map.\n   * For convenience each store (that can be) is also key-value-dumped into the root\n   * but as this has the potential for shadowed values, the name-indexed states are the\n   * best source of truth.\n   *\n   * @param storeMap {Map} a dictionary of string/Store listings\n   */ bottle.factory('defaultStateReducer', ({ isSet, isObject }) =>\n    (storeMapInstance) => {\n      const byName = {};\n      let out = {};\n\n      Array.from(storeMapInstance.stores.keys()).forEach((storeName) => {\n        const state = storeMapInstance.stores.get(storeName).state;\n        byName[storeName] = state;\n\n        if (isSet(state && isObject(state))) {\n          out = { ...out, ...state };\n        }\n      });\n\n      return { ...out, ...byName };\n    });\n\n  /**\n   * blends actions from multiple stores into the storeMap.\n   * Note: for convenience, each stores' actions are merged into the root\n   * which has significant potential for overlap.\n   *\n   * To insulate against this, store actions are also presented by name index;\n   *\n   * i.e., store \"alpha\" actions are always available in storeMapInstance.actions.alpha.[name].\n   *\n   */\n  bottle.factory('defaultActionReducer', () => (storeMapInstance) => {\n    let out = {}; // any\n\n    if (!(storeMapInstance.stores instanceof Map)) {\n      console.log('dar: non map passed:', storeMapInstance);\n      return {};\n    }\n\n    // dump all the actions into the root object.\n    // warning: potential for shadowing.\n    storeMapInstance.stores.forEach((store) => {\n      out = { ...out, ...store.actions };\n    });\n\n    const customActions = lGet(storeMapInstance, '_actions', {});\n    // overlay any custom actions over the root actions.\n    out = { ...out, ...customActions };\n\n    // segregate all the actions into a subset based on name.\n    storeMapInstance.stores.forEach((store, key) => {\n      out[key] = store.actions;\n    });\n\n    return out;\n  });\n\n\n  /**\n   * NOTE - this is a function that RETURNS a function; difficult to read in bottle notation,\n   * but the output of defaultStarterFactory's bottle is a function that takes in a storeMap\n   * and returns a starter function that calls each storeMap's starters.\n   */\n  bottle.factory('defaultStarter', ({ asMap, S_STARTED }) => (storeMapInstance) => {\n    const promises = [];\n    Array.from(asMap(storeMapInstance.stores).values()).forEach((store) => {\n      const promise = store.start();\n      if (store.status !== S_STARTED) {\n        promises.push(promise);\n      }\n    });\n\n    if (!promises.length) {\n      return storeMapInstance._stateReducer(storeMapInstance);\n    }\n    return Promise.all(promises)\n      .then(() => storeMapInstance._stateReducer(storeMapInstance));\n  });\n\n  /**\n   * StoreMap is a \"MetaStore\", like the reduced stores in Redux.\n   * It takes in a Map\n   */\n\n  bottle.factory('StoreMap', ({\n    S_STOPPED,\n    NOT_SET,\n    asMap,\n    defaultStateReducer,\n    defaultStarter,\n    defaultActionReducer,\n    isFunction,\n    Store,\n  }) => class StoreMap extends Store {\n    constructor(storeMap = new Map(), config = {}) {\n      const stateReducer = lGet(config, 'stateReducer', defaultStateReducer);\n      const actionReducer = lGet(config, 'actionReducer', defaultActionReducer);\n      const starter = lGet(config, 'starter', defaultStarter);\n\n      const trueMapStoreMap = asMap(storeMap);\n\n      const mockMe = { _stateReducer: stateReducer, stores: trueMapStoreMap };\n      super({\n        ...config,\n        state: stateReducer(mockMe),\n        starter,\n      });\n      this.stores = trueMapStoreMap;\n\n      this._stateReducer = stateReducer;\n      this._actionReducer = actionReducer;\n\n      this._listenToStores();\n    }\n\n    _listenToStores() {\n      this._subscribers = [];\n      this.stores.forEach((store, key) => {\n        const sub = store.stream.subscribe(() => {\n          this._updateStoreFromStores();\n        }, (error) => {\n          this.errorStream.next({\n            source: 'mapped store',\n            store,\n            error,\n          });\n        });\n        this._subscribers.push(sub);\n      });\n    }\n\n    _updateStoreFromStores() {\n      this.update(this._stateReducer);\n    }\n\n    stop() {\n      this.stores.forEach((store) => { store.complete(); });\n      this._subscribers.forEach(sub => sub.unsubscribe);\n      return this.update(NOT_SET, { status: S_STOPPED });\n    }\n\n    get do() {\n      return this.actions;\n    }\n\n    get actions() {\n      return this._actionReducer(this);\n    }\n\n    /**\n     * Because all state in a StoreMap is derived, we obviate the possibility\n     * of creating an action that directly changes the StoreMap state. I.e.,\n     * a StateMap action is ALWAYS a \"NOOP\" action that calls actions from its\n     * component stores but doesn't directly return a value to be injected into State.\n     *\n     * To accomplish this we suppress the direct response\n     * @param name\n     * @param mutator {function}\n     * @returns {function(...[*]): ChangePromise}\n     */\n    makeAction(name, mutator) {\n      if (!isFunction(mutator)) {\n        mutator = () => mutator;\n      }\n      return (...args) => this.update(\n        () => mutator(this, ...args),\n        { noop: true, action: name || true },\n      );\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/StoreMap/StoreMap.js","import storeMapFactory from './StoreMap';\n\nexport default (bottle) => {\n  storeMapFactory(bottle);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/StoreMap/index.js","import bottle from './bottle';\n\n\nconst {\n  Store, Engine, EngineMerger, update, mergeIntoState,\n  STORE_STATE_UNSET_VALUE\n  , S_NEW\n  , S_STARTED\n  , S_STARTING\n  , S_ERROR\n  , ACTION_ERROR\n  , ACTION_START\n  , ACTION_NOOP\n  , ACTION_COMPLETE\n  , NOT_SET,\n} = bottle().container;\n\nconsole.log('Engine:', Engine);\nexport {\n  STORE_STATE_UNSET_VALUE\n  , S_NEW\n  , S_STARTED\n  , S_STARTING\n  , S_ERROR\n  , ACTION_ERROR\n  , ACTION_START\n  , ACTION_NOOP\n  , ACTION_COMPLETE\n  , NOT_SET,\n  Store,\n  Engine,\n  EngineMerger,\n  update,\n  mergeIntoState,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Bottle from 'bottlejs';\nimport constants from './constants';\nimport util from './util';\nimport storeFactory from './Store';\nimport changePromiseFactory from './ChangePromise';\nimport storeMapFactory from './StoreMap';\n\nexport default () => {\n  const bottle = new Bottle();\n  [constants, changePromiseFactory, util, storeMapFactory, storeFactory].forEach(factory => factory(bottle));\n  return bottle;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/bottle.js","module.exports = require(\"bottlejs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bottlejs\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}